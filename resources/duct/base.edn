{[:duct/const :duct/daemon :brainard/application]
 #ig/ref :brainard/webserver

 :brainard/webserver
 {:apis        #ig/ref :brainard/apis
  :handler     #ig/ref :brainard/IWebHandler
  :server-port #ig/ref :cfg/server-port}


 ;; apis
 [:duct/const :brainard/apis]
 {:attachments #ig/ref :brainard/attachments-api
  :notes       #ig/ref :brainard/notes-api
  :schedules   #ig/ref :brainard/schedules-api
  :workspace   #ig/ref :brainard/workspace-api}

 [:duct/const :brainard/attachments-api]
 {:obj-store #ig/ref :brainard/obj-storage}

 [:duct/const :brainard/notes-api]
 {:store #ig/ref :brainard/storage}

 [:duct/const :brainard/schedules-api]
 {:store #ig/ref :brainard/storage}

 [:duct/const :brainard/workspace-api]
 {:store #ig/ref :brainard/storage}


 ;; infra
 :brainard/storage
 {:conn #ig/ref :brainard/IDBConn}

 :brainard/obj-storage
 {:invoker #ig/ref :brainard/IObjInvoker}

 [:duct/const :cfg.ds/schema]
 #duct/include "schema.edn"

 ;; move me to prod and make dev impl
 [:brainard/s3-invoker :brainard/IObjInvoker]
 {:access-key #duct/env "AWS_ACCESS_KEY"
  :bucket     #duct/env "AWS_S3_BUCKET"
  :region     #duct/env "AWS_S3_REGION"
  :secret-key #duct/env "AWS_SECRET_KEY"}

 ;; env
 [:duct/const :cfg/server-port]
 #duct/env ["SERVER_PORT" Int :or 1165]

 [:duct/const :cfg.ds/db-name]
 #duct/env ["DB_NAME" :or "brainard"]}
